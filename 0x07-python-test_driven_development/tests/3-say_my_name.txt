check ``` 3-say_my_name ```
"""
check function that print "My name is <fist name> <last name>
"""
-----------------------
Checking Docstring mod:
    >>> __import__('3-say_my_name').__doc__ != None
    True

Import say_my_name:

    >>> say_my_name = __import__('3-say_my_name').say_my_name

check function Docstring:
    >>> say_my_name.__doc__ != None
    True

Fist string (first_name) is str:
    >>> say_my_name("Hello")
    My name is Hello 

First string (first_name) is empty str:
    >>> say_my_name("")
    My name is  

Second string (last_name) is str:
    >>> say_my_name("Hello", "World")
    My name is Hello World


Fist string (first_name) is not str:
    >>> say_my_name(12, "World")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

    >>> say_my_name(12.5, "World")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> say_my_name(matrix, "World")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Second string (last_name) is not str:

    >>> say_my_name("Hello", 10)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

    >>> say_my_name("Hello", 10.5)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> say_my_name("Hello", matrix)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

check sum 2 arg and add:
    >>> say_my_name("Hello" "World", "Again")
    My name is HelloWorld Again

Call function with more than 2 arguments:
    >>> say_my_name("Hello", "World, "Again")
    Traceback (most recent call last):
    ...
    SyntaxError: invalid syntax

Call function with empty arguments:
    >>> say_my_name()
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'


    



